// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.

syntax = "proto3";

package foundation.provision.tool.protocol;

option go_package = "namespacelabs.dev/foundation/internal/planning/tool/protocol";

import "google/protobuf/any.proto";
import "schema/container.proto";
import "schema/defextension.proto";
import "schema/provision.proto";
import "schema/environment.proto";
import "schema/server.proto";

message PrepareRequest {
    foundation.schema.Environment env         = 1;
    foundation.schema.Server      server      = 2;
    int32                         api_version = 3;
}

message PrepareResponse {
    reserved 3;

    PreparedProvisionPlan prepared_provision_plan                = 1;
    repeated google.protobuf.Any deprecated_provision_input      = 2;
    repeated foundation.schema.SerializedMessage provision_input = 6;
    repeated foundation.schema.DefExtension extension            = 4;
    repeated foundation.schema.ServerExtension server_extension  = 5;
}

message PreparedProvisionPlan {
    repeated string declared_stack                     = 1;
    repeated foundation.schema.Invocation provisioning = 2;
    repeated foundation.schema.Container sidecar       = 3;
    repeated foundation.schema.Container init          = 4;
}

service PrepareService {
    rpc Prepare(PrepareRequest) returns (PrepareResponse);
}
